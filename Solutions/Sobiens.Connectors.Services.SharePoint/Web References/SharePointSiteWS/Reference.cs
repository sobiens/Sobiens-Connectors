//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sobiens.Connectors.Services.SharePoint.SharePointSiteWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SiteDataSoap", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class SiteData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSiteAndWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetURLSegmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangesExOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SiteData() {
            this.Url = global::Sobiens.Connectors.Services.SharePoint.Properties.Settings.Default.Sobiens_Connectors_Services_SharePoint_SharePointSiteWS_SiteData;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSiteAndWebCompletedEventHandler GetSiteAndWebCompleted;
        
        /// <remarks/>
        public event GetSiteCompletedEventHandler GetSiteCompleted;
        
        /// <remarks/>
        public event GetWebCompletedEventHandler GetWebCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event GetListItemsCompletedEventHandler GetListItemsCompleted;
        
        /// <remarks/>
        public event EnumerateFolderCompletedEventHandler EnumerateFolderCompleted;
        
        /// <remarks/>
        public event GetAttachmentsCompletedEventHandler GetAttachmentsCompleted;
        
        /// <remarks/>
        public event GetURLSegmentsCompletedEventHandler GetURLSegmentsCompleted;
        
        /// <remarks/>
        public event GetListCollectionCompletedEventHandler GetListCollectionCompleted;
        
        /// <remarks/>
        public event GetContentCompletedEventHandler GetContentCompleted;
        
        /// <remarks/>
        public event GetContentExCompletedEventHandler GetContentExCompleted;
        
        /// <remarks/>
        public event GetSiteUrlCompletedEventHandler GetSiteUrlCompleted;
        
        /// <remarks/>
        public event GetChangesCompletedEventHandler GetChangesCompleted;
        
        /// <remarks/>
        public event GetChangesExCompletedEventHandler GetChangesExCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetSiteAndWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSiteAndWeb(string strUrl, out string strSite, out string strWeb) {
            object[] results = this.Invoke("GetSiteAndWeb", new object[] {
                        strUrl});
            strSite = ((string)(results[1]));
            strWeb = ((string)(results[2]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAndWebAsync(string strUrl) {
            this.GetSiteAndWebAsync(strUrl, null);
        }
        
        /// <remarks/>
        public void GetSiteAndWebAsync(string strUrl, object userState) {
            if ((this.GetSiteAndWebOperationCompleted == null)) {
                this.GetSiteAndWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteAndWebOperationCompleted);
            }
            this.InvokeAsync("GetSiteAndWeb", new object[] {
                        strUrl}, this.GetSiteAndWebOperationCompleted, userState);
        }
        
        private void OnGetSiteAndWebOperationCompleted(object arg) {
            if ((this.GetSiteAndWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteAndWebCompleted(this, new GetSiteAndWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetSite", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSite(out _sSiteMetadata sSiteMetadata, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sWebWithTime[] vWebs, out string strUsers, out string strGroups, out string[] vGroups) {
            object[] results = this.Invoke("GetSite", new object[0]);
            sSiteMetadata = ((_sSiteMetadata)(results[1]));
            vWebs = ((_sWebWithTime[])(results[2]));
            strUsers = ((string)(results[3]));
            strGroups = ((string)(results[4]));
            vGroups = ((string[])(results[5]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAsync() {
            this.GetSiteAsync(null);
        }
        
        /// <remarks/>
        public void GetSiteAsync(object userState) {
            if ((this.GetSiteOperationCompleted == null)) {
                this.GetSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteOperationCompleted);
            }
            this.InvokeAsync("GetSite", new object[0], this.GetSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteOperationCompleted(object arg) {
            if ((this.GetSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWeb", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetWeb(out _sWebMetadata sWebMetadata, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sWebWithTime[] vWebs, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sListWithTime[] vLists, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sFPUrl[] vFPUrls, out string strRoles, out string[] vRolesUsers, out string[] vRolesGroups) {
            object[] results = this.Invoke("GetWeb", new object[0]);
            sWebMetadata = ((_sWebMetadata)(results[1]));
            vWebs = ((_sWebWithTime[])(results[2]));
            vLists = ((_sListWithTime[])(results[3]));
            vFPUrls = ((_sFPUrl[])(results[4]));
            strRoles = ((string)(results[5]));
            vRolesUsers = ((string[])(results[6]));
            vRolesGroups = ((string[])(results[7]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebAsync() {
            this.GetWebAsync(null);
        }
        
        /// <remarks/>
        public void GetWebAsync(object userState) {
            if ((this.GetWebOperationCompleted == null)) {
                this.GetWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebOperationCompleted);
            }
            this.InvokeAsync("GetWeb", new object[0], this.GetWebOperationCompleted, userState);
        }
        
        private void OnGetWebOperationCompleted(object arg) {
            if ((this.GetWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebCompleted(this, new GetWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetList", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetList(string strListName, out _sListMetadata sListMetadata, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sProperty[] vProperties) {
            object[] results = this.Invoke("GetList", new object[] {
                        strListName});
            sListMetadata = ((_sListMetadata)(results[1]));
            vProperties = ((_sProperty[])(results[2]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAsync(string strListName) {
            this.GetListAsync(strListName, null);
        }
        
        /// <remarks/>
        public void GetListAsync(string strListName, object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[] {
                        strListName}, this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListItems", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListItems(string strListName, string strQuery, string strViewFields, uint uRowLimit) {
            object[] results = this.Invoke("GetListItems", new object[] {
                        strListName,
                        strQuery,
                        strViewFields,
                        uRowLimit});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListItemsAsync(string strListName, string strQuery, string strViewFields, uint uRowLimit) {
            this.GetListItemsAsync(strListName, strQuery, strViewFields, uRowLimit, null);
        }
        
        /// <remarks/>
        public void GetListItemsAsync(string strListName, string strQuery, string strViewFields, uint uRowLimit, object userState) {
            if ((this.GetListItemsOperationCompleted == null)) {
                this.GetListItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListItemsOperationCompleted);
            }
            this.InvokeAsync("GetListItems", new object[] {
                        strListName,
                        strQuery,
                        strViewFields,
                        uRowLimit}, this.GetListItemsOperationCompleted, userState);
        }
        
        private void OnGetListItemsOperationCompleted(object arg) {
            if ((this.GetListItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListItemsCompleted(this, new GetListItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/EnumerateFolder", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint EnumerateFolder(string strFolderUrl, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sFPUrl[] vUrls) {
            object[] results = this.Invoke("EnumerateFolder", new object[] {
                        strFolderUrl});
            vUrls = ((_sFPUrl[])(results[1]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateFolderAsync(string strFolderUrl) {
            this.EnumerateFolderAsync(strFolderUrl, null);
        }
        
        /// <remarks/>
        public void EnumerateFolderAsync(string strFolderUrl, object userState) {
            if ((this.EnumerateFolderOperationCompleted == null)) {
                this.EnumerateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateFolderOperationCompleted);
            }
            this.InvokeAsync("EnumerateFolder", new object[] {
                        strFolderUrl}, this.EnumerateFolderOperationCompleted, userState);
        }
        
        private void OnEnumerateFolderOperationCompleted(object arg) {
            if ((this.EnumerateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateFolderCompleted(this, new EnumerateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetAttachments", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetAttachments(string strListName, string strItemId, out string[] vAttachments) {
            object[] results = this.Invoke("GetAttachments", new object[] {
                        strListName,
                        strItemId});
            vAttachments = ((string[])(results[1]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentsAsync(string strListName, string strItemId) {
            this.GetAttachmentsAsync(strListName, strItemId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentsAsync(string strListName, string strItemId, object userState) {
            if ((this.GetAttachmentsOperationCompleted == null)) {
                this.GetAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentsOperationCompleted);
            }
            this.InvokeAsync("GetAttachments", new object[] {
                        strListName,
                        strItemId}, this.GetAttachmentsOperationCompleted, userState);
        }
        
        private void OnGetAttachmentsOperationCompleted(object arg) {
            if ((this.GetAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentsCompleted(this, new GetAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetURLSegments", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetURLSegments(string strURL, out string strWebID, out string strBucketID, out string strListID, out string strItemID) {
            object[] results = this.Invoke("GetURLSegments", new object[] {
                        strURL});
            strWebID = ((string)(results[1]));
            strBucketID = ((string)(results[2]));
            strListID = ((string)(results[3]));
            strItemID = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetURLSegmentsAsync(string strURL) {
            this.GetURLSegmentsAsync(strURL, null);
        }
        
        /// <remarks/>
        public void GetURLSegmentsAsync(string strURL, object userState) {
            if ((this.GetURLSegmentsOperationCompleted == null)) {
                this.GetURLSegmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetURLSegmentsOperationCompleted);
            }
            this.InvokeAsync("GetURLSegments", new object[] {
                        strURL}, this.GetURLSegmentsOperationCompleted, userState);
        }
        
        private void OnGetURLSegmentsOperationCompleted(object arg) {
            if ((this.GetURLSegmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetURLSegmentsCompleted(this, new GetURLSegmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListCollection", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetListCollection([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out _sList[] vLists) {
            object[] results = this.Invoke("GetListCollection", new object[0]);
            vLists = ((_sList[])(results[1]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetListCollectionAsync() {
            this.GetListCollectionAsync(null);
        }
        
        /// <remarks/>
        public void GetListCollectionAsync(object userState) {
            if ((this.GetListCollectionOperationCompleted == null)) {
                this.GetListCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListCollectionOperationCompleted);
            }
            this.InvokeAsync("GetListCollection", new object[0], this.GetListCollectionOperationCompleted, userState);
        }
        
        private void OnGetListCollectionOperationCompleted(object arg) {
            if ((this.GetListCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCollectionCompleted(this, new GetListCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContent", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContent(ObjectType objectType, string objectId, string folderUrl, string itemId, bool retrieveChildItems, bool securityOnly, ref string lastItemIdOnPage) {
            object[] results = this.Invoke("GetContent", new object[] {
                        objectType,
                        objectId,
                        folderUrl,
                        itemId,
                        retrieveChildItems,
                        securityOnly,
                        lastItemIdOnPage});
            lastItemIdOnPage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAsync(ObjectType objectType, string objectId, string folderUrl, string itemId, bool retrieveChildItems, bool securityOnly, string lastItemIdOnPage) {
            this.GetContentAsync(objectType, objectId, folderUrl, itemId, retrieveChildItems, securityOnly, lastItemIdOnPage, null);
        }
        
        /// <remarks/>
        public void GetContentAsync(ObjectType objectType, string objectId, string folderUrl, string itemId, bool retrieveChildItems, bool securityOnly, string lastItemIdOnPage, object userState) {
            if ((this.GetContentOperationCompleted == null)) {
                this.GetContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentOperationCompleted);
            }
            this.InvokeAsync("GetContent", new object[] {
                        objectType,
                        objectId,
                        folderUrl,
                        itemId,
                        retrieveChildItems,
                        securityOnly,
                        lastItemIdOnPage}, this.GetContentOperationCompleted, userState);
        }
        
        private void OnGetContentOperationCompleted(object arg) {
            if ((this.GetContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentCompleted(this, new GetContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContentEx", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentEx(int version, string xmlInput) {
            object[] results = this.Invoke("GetContentEx", new object[] {
                        version,
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentExAsync(int version, string xmlInput) {
            this.GetContentExAsync(version, xmlInput, null);
        }
        
        /// <remarks/>
        public void GetContentExAsync(int version, string xmlInput, object userState) {
            if ((this.GetContentExOperationCompleted == null)) {
                this.GetContentExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentExOperationCompleted);
            }
            this.InvokeAsync("GetContentEx", new object[] {
                        version,
                        xmlInput}, this.GetContentExOperationCompleted, userState);
        }
        
        private void OnGetContentExOperationCompleted(object arg) {
            if ((this.GetContentExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentExCompleted(this, new GetContentExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetSiteUrl", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetSiteUrl(string Url, out string siteUrl, out string siteId) {
            object[] results = this.Invoke("GetSiteUrl", new object[] {
                        Url});
            siteUrl = ((string)(results[1]));
            siteId = ((string)(results[2]));
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteUrlAsync(string Url) {
            this.GetSiteUrlAsync(Url, null);
        }
        
        /// <remarks/>
        public void GetSiteUrlAsync(string Url, object userState) {
            if ((this.GetSiteUrlOperationCompleted == null)) {
                this.GetSiteUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteUrlOperationCompleted);
            }
            this.InvokeAsync("GetSiteUrl", new object[] {
                        Url}, this.GetSiteUrlOperationCompleted, userState);
        }
        
        private void OnGetSiteUrlOperationCompleted(object arg) {
            if ((this.GetSiteUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteUrlCompleted(this, new GetSiteUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetChanges", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChanges(ObjectType objectType, string contentDatabaseId, ref string LastChangeId, ref string CurrentChangeId, int Timeout, out bool moreChanges) {
            object[] results = this.Invoke("GetChanges", new object[] {
                        objectType,
                        contentDatabaseId,
                        LastChangeId,
                        CurrentChangeId,
                        Timeout});
            LastChangeId = ((string)(results[1]));
            CurrentChangeId = ((string)(results[2]));
            moreChanges = ((bool)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangesAsync(ObjectType objectType, string contentDatabaseId, string LastChangeId, string CurrentChangeId, int Timeout) {
            this.GetChangesAsync(objectType, contentDatabaseId, LastChangeId, CurrentChangeId, Timeout, null);
        }
        
        /// <remarks/>
        public void GetChangesAsync(ObjectType objectType, string contentDatabaseId, string LastChangeId, string CurrentChangeId, int Timeout, object userState) {
            if ((this.GetChangesOperationCompleted == null)) {
                this.GetChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangesOperationCompleted);
            }
            this.InvokeAsync("GetChanges", new object[] {
                        objectType,
                        contentDatabaseId,
                        LastChangeId,
                        CurrentChangeId,
                        Timeout}, this.GetChangesOperationCompleted, userState);
        }
        
        private void OnGetChangesOperationCompleted(object arg) {
            if ((this.GetChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangesCompleted(this, new GetChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetChangesEx", RequestNamespace="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace="http://schemas.microsoft.com/sharepoint/soap/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChangesEx(int version, string xmlInput) {
            object[] results = this.Invoke("GetChangesEx", new object[] {
                        version,
                        xmlInput});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChangesExAsync(int version, string xmlInput) {
            this.GetChangesExAsync(version, xmlInput, null);
        }
        
        /// <remarks/>
        public void GetChangesExAsync(int version, string xmlInput, object userState) {
            if ((this.GetChangesExOperationCompleted == null)) {
                this.GetChangesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangesExOperationCompleted);
            }
            this.InvokeAsync("GetChangesEx", new object[] {
                        version,
                        xmlInput}, this.GetChangesExOperationCompleted, userState);
        }
        
        private void OnGetChangesExOperationCompleted(object arg) {
            if ((this.GetChangesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangesExCompleted(this, new GetChangesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sSiteMetadata {
        
        private System.DateTime lastModifiedField;
        
        private System.DateTime lastModifiedForceRecrawlField;
        
        private bool smallSiteField;
        
        private string portalUrlField;
        
        private string userProfileGUIDField;
        
        private bool validSecurityInfoField;
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedForceRecrawl {
            get {
                return this.lastModifiedForceRecrawlField;
            }
            set {
                this.lastModifiedForceRecrawlField = value;
            }
        }
        
        /// <remarks/>
        public bool SmallSite {
            get {
                return this.smallSiteField;
            }
            set {
                this.smallSiteField = value;
            }
        }
        
        /// <remarks/>
        public string PortalUrl {
            get {
                return this.portalUrlField;
            }
            set {
                this.portalUrlField = value;
            }
        }
        
        /// <remarks/>
        public string UserProfileGUID {
            get {
                return this.userProfileGUIDField;
            }
            set {
                this.userProfileGUIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidSecurityInfo {
            get {
                return this.validSecurityInfoField;
            }
            set {
                this.validSecurityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sList {
        
        private string internalNameField;
        
        private string titleField;
        
        private string descriptionField;
        
        private string baseTypeField;
        
        private string baseTemplateField;
        
        private string defaultViewUrlField;
        
        private string lastModifiedField;
        
        private string permIdField;
        
        private bool inheritedSecurityField;
        
        private bool allowAnonymousAccessField;
        
        private bool anonymousViewListItemsField;
        
        private int readSecurityField;
        
        /// <remarks/>
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BaseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BaseTemplate {
            get {
                return this.baseTemplateField;
            }
            set {
                this.baseTemplateField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultViewUrl {
            get {
                return this.defaultViewUrlField;
            }
            set {
                this.defaultViewUrlField = value;
            }
        }
        
        /// <remarks/>
        public string LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string PermId {
            get {
                return this.permIdField;
            }
            set {
                this.permIdField = value;
            }
        }
        
        /// <remarks/>
        public bool InheritedSecurity {
            get {
                return this.inheritedSecurityField;
            }
            set {
                this.inheritedSecurityField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAnonymousAccess {
            get {
                return this.allowAnonymousAccessField;
            }
            set {
                this.allowAnonymousAccessField = value;
            }
        }
        
        /// <remarks/>
        public bool AnonymousViewListItems {
            get {
                return this.anonymousViewListItemsField;
            }
            set {
                this.anonymousViewListItemsField = value;
            }
        }
        
        /// <remarks/>
        public int ReadSecurity {
            get {
                return this.readSecurityField;
            }
            set {
                this.readSecurityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sProperty {
        
        private string nameField;
        
        private string titleField;
        
        private string typeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sListMetadata {
        
        private string titleField;
        
        private string descriptionField;
        
        private string baseTypeField;
        
        private string baseTemplateField;
        
        private string defaultViewUrlField;
        
        private System.DateTime lastModifiedField;
        
        private System.DateTime lastModifiedForceRecrawlField;
        
        private string authorField;
        
        private bool validSecurityInfoField;
        
        private bool inheritedSecurityField;
        
        private bool allowAnonymousAccessField;
        
        private bool anonymousViewListItemsField;
        
        private int readSecurityField;
        
        private string permissionsField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string BaseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BaseTemplate {
            get {
                return this.baseTemplateField;
            }
            set {
                this.baseTemplateField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultViewUrl {
            get {
                return this.defaultViewUrlField;
            }
            set {
                this.defaultViewUrlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedForceRecrawl {
            get {
                return this.lastModifiedForceRecrawlField;
            }
            set {
                this.lastModifiedForceRecrawlField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidSecurityInfo {
            get {
                return this.validSecurityInfoField;
            }
            set {
                this.validSecurityInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool InheritedSecurity {
            get {
                return this.inheritedSecurityField;
            }
            set {
                this.inheritedSecurityField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAnonymousAccess {
            get {
                return this.allowAnonymousAccessField;
            }
            set {
                this.allowAnonymousAccessField = value;
            }
        }
        
        /// <remarks/>
        public bool AnonymousViewListItems {
            get {
                return this.anonymousViewListItemsField;
            }
            set {
                this.anonymousViewListItemsField = value;
            }
        }
        
        /// <remarks/>
        public int ReadSecurity {
            get {
                return this.readSecurityField;
            }
            set {
                this.readSecurityField = value;
            }
        }
        
        /// <remarks/>
        public string Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sFPUrl {
        
        private string urlField;
        
        private System.DateTime lastModifiedField;
        
        private bool isFolderField;
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFolder {
            get {
                return this.isFolderField;
            }
            set {
                this.isFolderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sListWithTime {
        
        private string internalNameField;
        
        private System.DateTime lastModifiedField;
        
        private bool isEmptyField;
        
        /// <remarks/>
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEmpty {
            get {
                return this.isEmptyField;
            }
            set {
                this.isEmptyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sWebMetadata {
        
        private string webIDField;
        
        private string titleField;
        
        private string descriptionField;
        
        private string authorField;
        
        private uint languageField;
        
        private System.DateTime lastModifiedField;
        
        private System.DateTime lastModifiedForceRecrawlField;
        
        private string noIndexField;
        
        private bool validSecurityInfoField;
        
        private bool inheritedSecurityField;
        
        private bool allowAnonymousAccessField;
        
        private bool anonymousViewListItemsField;
        
        private string permissionsField;
        
        private bool externalSecurityField;
        
        private string categoryIdField;
        
        private string categoryNameField;
        
        private string categoryIdPathField;
        
        private bool isBucketWebField;
        
        private bool usedInAutocatField;
        
        private string categoryBucketIDField;
        
        /// <remarks/>
        public string WebID {
            get {
                return this.webIDField;
            }
            set {
                this.webIDField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public uint Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifiedForceRecrawl {
            get {
                return this.lastModifiedForceRecrawlField;
            }
            set {
                this.lastModifiedForceRecrawlField = value;
            }
        }
        
        /// <remarks/>
        public string NoIndex {
            get {
                return this.noIndexField;
            }
            set {
                this.noIndexField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidSecurityInfo {
            get {
                return this.validSecurityInfoField;
            }
            set {
                this.validSecurityInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool InheritedSecurity {
            get {
                return this.inheritedSecurityField;
            }
            set {
                this.inheritedSecurityField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAnonymousAccess {
            get {
                return this.allowAnonymousAccessField;
            }
            set {
                this.allowAnonymousAccessField = value;
            }
        }
        
        /// <remarks/>
        public bool AnonymousViewListItems {
            get {
                return this.anonymousViewListItemsField;
            }
            set {
                this.anonymousViewListItemsField = value;
            }
        }
        
        /// <remarks/>
        public string Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public bool ExternalSecurity {
            get {
                return this.externalSecurityField;
            }
            set {
                this.externalSecurityField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryIdPath {
            get {
                return this.categoryIdPathField;
            }
            set {
                this.categoryIdPathField = value;
            }
        }
        
        /// <remarks/>
        public bool IsBucketWeb {
            get {
                return this.isBucketWebField;
            }
            set {
                this.isBucketWebField = value;
            }
        }
        
        /// <remarks/>
        public bool UsedInAutocat {
            get {
                return this.usedInAutocatField;
            }
            set {
                this.usedInAutocatField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryBucketID {
            get {
                return this.categoryBucketIDField;
            }
            set {
                this.categoryBucketIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class _sWebWithTime {
        
        private string urlField;
        
        private System.DateTime lastModifiedField;
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public enum ObjectType {
        
        /// <remarks/>
        VirtualServer,
        
        /// <remarks/>
        ContentDatabase,
        
        /// <remarks/>
        SiteCollection,
        
        /// <remarks/>
        Site,
        
        /// <remarks/>
        List,
        
        /// <remarks/>
        Folder,
        
        /// <remarks/>
        ListItem,
        
        /// <remarks/>
        ListItemAttachments,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSiteAndWebCompletedEventHandler(object sender, GetSiteAndWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteAndWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteAndWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strSite {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strWeb {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSiteCompletedEventHandler(object sender, GetSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public _sSiteMetadata sSiteMetadata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sSiteMetadata)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public _sWebWithTime[] vWebs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sWebWithTime[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strUsers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strGroups {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string[] vGroups {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetWebCompletedEventHandler(object sender, GetWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public _sWebMetadata sWebMetadata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sWebMetadata)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public _sWebWithTime[] vWebs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sWebWithTime[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public _sListWithTime[] vLists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sListWithTime[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public _sFPUrl[] vFPUrls {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sFPUrl[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string strRoles {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string[] vRolesUsers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string[] vRolesGroups {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetListCompletedEventHandler(object sender, GetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public _sListMetadata sListMetadata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sListMetadata)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public _sProperty[] vProperties {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sProperty[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetListItemsCompletedEventHandler(object sender, GetListItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void EnumerateFolderCompletedEventHandler(object sender, EnumerateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public _sFPUrl[] vUrls {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sFPUrl[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAttachmentsCompletedEventHandler(object sender, GetAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] vAttachments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetURLSegmentsCompletedEventHandler(object sender, GetURLSegmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetURLSegmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetURLSegmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strWebID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strBucketID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strListID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strItemID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetListCollectionCompletedEventHandler(object sender, GetListCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public _sList[] vLists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_sList[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetContentCompletedEventHandler(object sender, GetContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string lastItemIdOnPage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetContentExCompletedEventHandler(object sender, GetContentExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSiteUrlCompletedEventHandler(object sender, GetSiteUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string siteUrl {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string siteId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChangesCompletedEventHandler(object sender, GetChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string LastChangeId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string CurrentChangeId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool moreChanges {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetChangesExCompletedEventHandler(object sender, GetChangesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591