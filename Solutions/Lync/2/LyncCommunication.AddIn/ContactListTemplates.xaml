<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Microsoft_Lync_Controls="clr-namespace:Microsoft.Lync.Controls;assembly=Microsoft.Lync.Controls" 
    xmlns:Microsoft_Lync_Controls_Internal="clr-namespace:Microsoft.Lync.Controls.Internal;assembly=Microsoft.Lync.Controls" 
    xmlns:Microsoft_Lync_Controls_Internal_Converters="clr-namespace:Microsoft.Lync.Controls.Internal.Converters;assembly=Microsoft.Lync.Controls" 
    xmlns:Microsoft_Lync_Internal_Utilities_Helpers="clr-namespace:Microsoft.Lync.Internal.Utilities.Helpers;assembly=Microsoft.Lync.Utilities" 
    xmlns:Microsoft_Lync_Controls_Internal_Framework_Commands="clr-namespace:Microsoft.Lync.Controls.Internal.Framework.Commands;assembly=Microsoft.Lync.Controls.Framework"
	xmlns:LyncCommunicationAddIn="clr-namespace:LyncCommunicationAddIn">
	
    <!-- Resource dictionary entries should be defined here. -->
	<DataTemplate x:Key="CustomizedPersonContactTemplate">
		<Grid Background="#00000000" HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="19"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="4"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="4"/>
			</Grid.RowDefinitions>
			<Grid Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Microsoft_Lync_Controls_Internal:DockPanel LastChildFill="True">
					<Microsoft_Lync_Controls_Internal:FocuslessButton Focusable="False" Microsoft_Lync_Controls_Internal:PopupContactCardHost.IsHoverOnTarget="False" VerticalAlignment="Top">
						<Microsoft_Lync_Controls_Internal:FocuslessButton.Style>
							<Style TargetType="{x:Type Button}">
								<Setter Property="Padding" Value="0"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Grid x:Name="grid">
												<Border x:Name="HoverGlow" BorderBrush="{Binding ContactNameHoverBrush}" BorderThickness="1" Background="Transparent" CornerRadius="1" HorizontalAlignment="Left" Height="36" Visibility="Collapsed" Width="45">
													<Border.Effect>
														<DropShadowEffect BlurRadius="3" Color="#FF4CCCE5" ShadowDepth="0"/>
													</Border.Effect>
												</Border>
												<ContentControl x:Name="PresenterContainer" Background="Transparent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{Binding GlobalTextColor_Black}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												<Border x:Name="HoverBorder" BorderBrush="{Binding ContactNameHoverBrush}" BorderThickness="1" Background="Transparent" CornerRadius="1" HorizontalAlignment="Left" Height="36" Visibility="Collapsed" Width="45"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Microsoft_Lync_Controls_Internal:FocuslessButton.Style>
						<StackPanel Orientation="Horizontal">
							<Microsoft_Lync_Controls:AvailabilityIcon x:Name="PART_PresenceIndicator" ContextualInformation="{Binding ContextualInformation, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="36" IsTabStop="False" PhotoDisplayMode="Small" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Width="45"/>
							<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="NameTextBlock" IsTabStop="False" Margin="6,0,0,0" Text="{Binding PresenceItems.Name}">
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="UseEllipsis" Value="True"/>
										<Setter Property="VerticalAlignment" Value="Bottom"/>
										<Style.BasedOn>
											<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
												<Setter Property="FontSize" Value="12"/>
											</Style>
										</Style.BasedOn>
									</Style>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
									<Binding Path="ShowFriendlyName" RelativeSource="{RelativeSource TemplatedParent}">
										<Binding.Converter>
											<Microsoft_Lync_Controls_Internal_Converters:BooleanToVisibility/>
										</Binding.Converter>
									</Binding>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
									<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
										<Binding.Converter>
											<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
										</Binding.Converter>
									</Binding>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
							</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
							<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="UriTextBlock" IsTabStop="False" Margin="6,0,0,0" Text="{Binding Uri}">
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="UseEllipsis" Value="True"/>
										<Setter Property="VerticalAlignment" Value="Bottom"/>
										<Style.BasedOn>
											<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
												<Setter Property="FontSize" Value="12"/>
											</Style>
										</Style.BasedOn>
									</Style>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
									<Binding Path="ShowFriendlyName" RelativeSource="{RelativeSource TemplatedParent}">
										<Binding.Converter>
											<Microsoft_Lync_Controls_Internal_Converters:NotBooleanToVisibility/>
										</Binding.Converter>
									</Binding>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
								<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
									<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
										<Binding.Converter>
											<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
										</Binding.Converter>
									</Binding>
								</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
							</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
						</StackPanel>
					</Microsoft_Lync_Controls_Internal:FocuslessButton>
					<TextBlock Foreground="{Binding GlobalTextColor_Black}" Margin="0,0.25,0,-0.25"><TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="VerticalAlignment" Value="Bottom"/>
								<Setter Property="Text" Value=" - "/>
								<Style.BasedOn>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="FontSize" Value="12"/>
									</Style>
								</Style.BasedOn>
							</Style>
						</TextBlock.Style><TextBlock.Visibility>
							<Binding FallbackValue="Collapsed" Path="PresenceItems.ActivityString">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVisibility/>
								</Binding.Converter>
							</Binding>
						</TextBlock.Visibility><TextBlock.VerticalAlignment>
							<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
								</Binding.Converter>
							</Binding>
						</TextBlock.VerticalAlignment><Run Text=" - "/></TextBlock>
					<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="ActivityStringTextBlock" Foreground="{Binding GlobalTextColor_Black}" IsTabStop="False" Text="{Binding PresenceItems.ActivityString}">
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
							<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
								<Setter Property="UseEllipsis" Value="True"/>
								<Setter Property="VerticalAlignment" Value="Bottom"/>
								<Style.BasedOn>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="FontSize" Value="12"/>
									</Style>
								</Style.BasedOn>
							</Style>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
							<Binding Mode="OneWay" Path="IsBlocked">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NotBooleanToVisibility/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
							<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
					</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
					<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="ActivityStringBlockedTextBlock" Foreground="{Binding GlobalTextColor_Black}" IsTabStop="False" Text="{Binding Resources.ContactAccessLevelBlocked}">
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
							<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
								<Setter Property="UseEllipsis" Value="True"/>
								<Setter Property="VerticalAlignment" Value="Bottom"/>
								<Style.BasedOn>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="FontSize" Value="12"/>
									</Style>
								</Style.BasedOn>
							</Style>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
							<Binding Mode="OneWay" Path="IsBlocked">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:BooleanToVisibility/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
							<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
					</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
					<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="IdleStartTime" Foreground="{Binding GlobalTextColor_MediumDark}" IsTabStop="False" Margin="10,0,0,0">
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
							<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
								<Setter Property="UseEllipsis" Value="True"/>
								<Setter Property="VerticalAlignment" Value="Bottom"/>
								<Style.BasedOn>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="FontSize" Value="12"/>
									</Style>
								</Style.BasedOn>
							</Style>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Text>
							<Binding Mode="OneWay" Path="PresenceItems.IdleTime">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:IdleTimeToString EnableFreeBusyOption="False"/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Text>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
							<Binding Path="IsBlocked">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NotBooleanToVisibility/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
							<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.VerticalAlignment>
					</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
				</Microsoft_Lync_Controls_Internal:DockPanel>
				<Microsoft_Lync_Controls:StartAudioCallButton x:Name="PART_CallButton" ContextualInformation="{Binding ContextualInformation, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" IsTabStop="False" Margin="6,0,1,0" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
					<Microsoft_Lync_Controls:StartAudioCallButton.Style>
						<Style TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
							<Setter Property="Margin" Value="12,-1,0,0"/>
							<Setter Property="IsTabStop" Value="False"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
										<Microsoft_Lync_Controls_Internal:SplitButton x:Name="PART_CommandControl" AutomationProperties.AutomationId="StartAudioVideoButton" Command="{Binding StartConferenceCallConditionalCommand, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding GlobalTextColor_Black}" Height="20" IsTabStop="False">
											<Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
												<Binding Path="ContextualInformation" RelativeSource="{RelativeSource TemplatedParent}">
													<Binding.Converter>
														<Microsoft_Lync_Controls_Internal_Converters:ConversationContextToContextModel/>
													</Binding.Converter>
												</Binding>
											</Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
											<Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
												<Microsoft_Lync_Controls_Internal:ContextMenu Foreground="{Binding GlobalTextColor_Black}" FontWeight="Bold" FontSize="10.6" Owner="{x:Null}">
													<Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
														<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
															<Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
																<Setter.Value>
																	<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
																		<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
																	</Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
																</Setter.Value>
															</Setter>
															<Setter Property="CommandParameter" Value="{Binding}"/>
															<Setter Property="Command" Value="{Binding ContactEndpoint.PresenceItems.Contact.StartAudioVideoCommand}"/>
															<Setter Property="Header">
																<Setter.Value>
																	<Binding Path="ContactEndpoint.Type">
																		<Binding.Converter>
																			<Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
																		</Binding.Converter>
																	</Binding>
																</Setter.Value>
															</Setter>
															<Setter Property="AutomationProperties.Name" Value="{Binding ContactEndpoint.Uri}"/>
															<Setter Property="AutomationProperties.AutomationId">
																<Setter.Value>
																	<Binding Path="ContactEndpoint.Type">
																		<Binding.Converter>
																			<Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
																		</Binding.Converter>
																	</Binding>
																</Setter.Value>
															</Setter>
															<Setter Property="Icon">
																<Setter.Value>
																	<Binding Path="ContactEndpoint">
																		<Binding.Converter>
																			<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
																		</Binding.Converter>
																	</Binding>
																</Setter.Value>
															</Setter>
															<Setter Property="Height" Value="36"/>
															<Setter Property="FontWeight" Value="Normal"/>
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																		<Grid Background="Transparent">
																			<Grid Margin="1" SnapsToDevicePixels="True">
																				<Grid.ColumnDefinitions>
																					<ColumnDefinition Width="25"/>
																					<ColumnDefinition Width="1"/>
																					<ColumnDefinition Width="*"/>
																					<ColumnDefinition Width="Auto"/>
																					<ColumnDefinition Width="Auto"/>
																				</Grid.ColumnDefinitions>
																				<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																				<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																				<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																				<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,4,4,4" VerticalAlignment="Top" Width="16"/>
																				<StackPanel Grid.Column="2" Margin="7,0" VerticalAlignment="Center">
																					<ContentControl x:Name="CoreContentControl" Foreground="{Binding GlobalTextColor_Black}">
																						<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																					</ContentControl>
																					<ContentControl x:Name="DisplayNameControl" Foreground="{Binding GlobalTextColor_MediumDark}">
																						<ContentPresenter Content="{Binding ContactEndpoint.DisplayName}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
																					</ContentControl>
																				</StackPanel>
																				<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																			</Grid>
																			<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																				<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																					<Border.Effect>
																						<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																					</Border.Effect>
																					<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																						<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																					</ScrollViewer>
																				</Border>
																			</Popup>
																		</Grid>
																		<ControlTemplate.Triggers>
																			<Trigger Property="Icon" Value="{x:Null}">
																				<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																			</Trigger>
																			<Trigger Property="IsHighlighted" Value="True">
																				<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																				<Setter Property="Foreground" TargetName="CoreContentControl" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																				<Setter Property="Foreground" TargetName="DisplayNameControl" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																			</Trigger>
																			<Trigger Property="IsEnabled" Value="False">
																				<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																				<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																				<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																			</Trigger>
																			<Trigger Property="HasItems" Value="False">
																				<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
															<Style.BasedOn>
																<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																	<Setter Property="Height" Value="26"/>
																	<Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
																	<Setter Property="Template">
																		<Setter.Value>
																			<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																				<Grid Background="Transparent">
																					<Grid Margin="1" SnapsToDevicePixels="True">
																						<Grid.ColumnDefinitions>
																							<ColumnDefinition Width="25"/>
																							<ColumnDefinition Width="1"/>
																							<ColumnDefinition Width="*"/>
																							<ColumnDefinition Width="Auto"/>
																							<ColumnDefinition Width="Auto"/>
																						</Grid.ColumnDefinitions>
																						<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																						<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																						<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																						<Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
																							<Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
																						</Border>
																						<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
																						<ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
																							<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																						</ContentControl>
																						<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																					</Grid>
																					<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																						<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																							<Border.Effect>
																								<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																							</Border.Effect>
																							<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																								<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																							</ScrollViewer>
																						</Border>
																					</Popup>
																				</Grid>
																				<ControlTemplate.Triggers>
																					<Trigger Property="Icon" Value="{x:Null}">
																						<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																						<Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
																					</Trigger>
																					<Trigger Property="IsChecked" Value="True">
																						<Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
																						<Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																					</Trigger>
																					<Trigger Property="IsHighlighted" Value="True">
																						<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																						<Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																					</Trigger>
																					<Trigger Property="IsEnabled" Value="False">
																						<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																						<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																						<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																						<Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
																					</Trigger>
																					<Trigger Property="HasItems" Value="False">
																						<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																					</Trigger>
																				</ControlTemplate.Triggers>
																			</ControlTemplate>
																		</Setter.Value>
																	</Setter>
																</Style>
															</Style.BasedOn>
														</Style>
													</Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
													<Microsoft_Lync_Controls_Internal:ContextMenu.Style>
														<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
																		<ControlTemplate.Resources>
																			<Style x:Key="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}" TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																				<Style.BasedOn>
																					<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																						<Setter Property="Height" Value="26"/>
																						<Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
																						<Setter Property="Template">
																							<Setter.Value>
																								<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																									<Grid Background="Transparent">
																										<Grid Margin="1" SnapsToDevicePixels="True">
																											<Grid.ColumnDefinitions>
																												<ColumnDefinition Width="25"/>
																												<ColumnDefinition Width="1"/>
																												<ColumnDefinition Width="*"/>
																												<ColumnDefinition Width="Auto"/>
																												<ColumnDefinition Width="Auto"/>
																											</Grid.ColumnDefinitions>
																											<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																											<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																											<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																											<Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
																												<Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
																											</Border>
																											<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
																											<ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
																												<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																											</ContentControl>
																											<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																										</Grid>
																										<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																											<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																												<Border.Effect>
																													<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																												</Border.Effect>
																												<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																													<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																												</ScrollViewer>
																											</Border>
																										</Popup>
																									</Grid>
																									<ControlTemplate.Triggers>
																										<Trigger Property="Icon" Value="{x:Null}">
																											<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																											<Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
																										</Trigger>
																										<Trigger Property="IsChecked" Value="True">
																											<Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
																											<Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																										</Trigger>
																										<Trigger Property="IsHighlighted" Value="True">
																											<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																											<Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																										</Trigger>
																										<Trigger Property="IsEnabled" Value="False">
																											<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																											<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																											<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																											<Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
																										</Trigger>
																										<Trigger Property="HasItems" Value="False">
																											<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																										</Trigger>
																									</ControlTemplate.Triggers>
																								</ControlTemplate>
																							</Setter.Value>
																						</Setter>
																					</Style>
																				</Style.BasedOn>
																			</Style>
																		</ControlTemplate.Resources>
																		<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																			<Border.Effect>
																				<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																			</Border.Effect>
																			<StackPanel KeyboardNavigation.DirectionalNavigation="Cycle" IsItemsHost="True" Margin="0"/>
																		</Border>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Microsoft_Lync_Controls_Internal:ContextMenu.Style>
												</Microsoft_Lync_Controls_Internal:ContextMenu>
											</Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
											<Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
												<ToolTip>
													<ToolTip.Style>
														<Style TargetType="{x:Type ToolTip}"/>
													</ToolTip.Style>
													<Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource TemplatedParent}">
														<Binding.Converter>
															<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToStartAudioConversationToolTip/>
														</Binding.Converter>
													</Binding>
												</ToolTip>
											</Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
											<Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
												<ToolTip Content="{Binding Resources.TooltipCallButtonViewMoreCallOptions}">
													<ToolTip.Style>
														<Style TargetType="{x:Type ToolTip}"/>
													</ToolTip.Style>
												</ToolTip>
											</Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
											<Microsoft_Lync_Controls_Internal:SplitButton.Style>
												<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
													<Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
														<Setter.Value>
															<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
																<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
															</Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
														</Setter.Value>
													</Setter>
													<Setter Property="FontSize" Value="10.6"/>
													<Setter Property="HorizontalContentAlignment" Value="Left"/>
													<Setter Property="VerticalContentAlignment" Value="Top"/>
													<Setter Property="Padding" Value="0"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
																<Grid x:Name="TemplateRoot">
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="*"/>
																		<ColumnDefinition Width="12"/>
																	</Grid.ColumnDefinitions>
																	<Border x:Name="RightSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Visibility="Visible">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="0,2,2,0"/>
																				<Setter Property="Grid.Column" Value="1"/>
																				<Setter Property="Margin" Value="-1,0,0,0"/>
																			</Style>
																		</Border.Style>
																	</Border>
																	<Border x:Name="LeftSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Grid.Column="0" Visibility="Visible">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="2,0,0,2"/>
																			</Style>
																		</Border.Style>
																	</Border>
																	<Border x:Name="LeftSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}" Grid.Column="0">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="2,0,0,2"/>
																			</Style>
																		</Border.Style>
																		<Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
																	</Border>
																	<Border x:Name="LeftSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}" Grid.Column="0">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="2,0,0,2"/>
																			</Style>
																		</Border.Style>
																		<Grid>
																			<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
																			<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
																		</Grid>
																	</Border>
																	<Border x:Name="RightSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="0,2,2,0"/>
																				<Setter Property="Grid.Column" Value="1"/>
																				<Setter Property="Margin" Value="-1,0,0,0"/>
																			</Style>
																		</Border.Style>
																		<Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
																	</Border>
																	<Border x:Name="RightSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}">
																		<Border.Style>
																			<Style TargetType="{x:Type Border}">
																				<Setter Property="Visibility" Value="Collapsed"/>
																				<Setter Property="BorderThickness" Value="1"/>
																				<Setter Property="CornerRadius" Value="0,2,2,0"/>
																				<Setter Property="Grid.Column" Value="1"/>
																				<Setter Property="Margin" Value="-1,0,0,0"/>
																			</Style>
																		</Border.Style>
																		<Grid>
																			<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
																			<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
																		</Grid>
																	</Border>
																	<Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_LeftButton" AutomationProperties.AutomationId="LeftButton" Background="Transparent" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.Click="{TemplateBinding Command}" Content="{TemplateBinding Content}" Grid.Column="0" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.CommandParameter="{TemplateBinding CommandParameter}" IsTabStop="False" Margin="2" Padding="{TemplateBinding Padding}">
																		<Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																			<Style TargetType="{x:Type Button}">
																				<Setter Property="Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="{x:Type Button}">
																							<Grid Background="Transparent">
																								<Border x:Name="presenterContainer" Margin="{TemplateBinding Padding}">
																									<ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																								</Border>
																							</Grid>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																				<Style.BasedOn>
																					<Style TargetType="{x:Type Control}">
																						<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																					</Style>
																				</Style.BasedOn>
																			</Style>
																		</Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																	</Microsoft_Lync_Controls_Internal:HelpTextButton>
																	<Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_RightButton" AutomationProperties.AutomationId="RightButton" Grid.Column="1" IsTabStop="False" Margin="-1,0,0,0" Width="13">
																		<Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																			<Style TargetType="{x:Type Button}">
																				<Setter Property="Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="{x:Type Button}">
																							<Grid Background="Transparent">
																								<Border x:Name="presenterContainer">
																									<ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																								</Border>
																							</Grid>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																				<Style.BasedOn>
																					<Style TargetType="{x:Type Control}">
																						<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																					</Style>
																				</Style.BasedOn>
																			</Style>
																		</Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																		<Path x:Name="path" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Stretch" Height="3" Margin="3,0,4,0" Stretch="Uniform" VerticalAlignment="Center" Width="5"/>
																	</Microsoft_Lync_Controls_Internal:HelpTextButton>
																</Grid>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Microsoft_Lync_Controls_Internal:SplitButton.Style>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="20"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<ContentPresenter Margin="4,0,0,0" VerticalAlignment="Top">
													<ContentPresenter.Content>
														<Binding Path="DefaultEndpoint">
															<Binding.Converter>
																<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
															</Binding.Converter>
														</Binding>
													</ContentPresenter.Content>
												</ContentPresenter>
												<TextBlock Grid.Column="1" Foreground="{Binding GlobalTextColor_Dark}" FontWeight="SemiBold" Margin="4,0" Text="{Binding Resources.CallButtonLabel}" VerticalAlignment="Center"><TextBlock.Style>
														<Style TargetType="{x:Type TextBlock}">
															<Setter Property="FontSize" Value="10.6"/>
														</Style>
													</TextBlock.Style><Run Text="Call"/></TextBlock>
											</Grid>
										</Microsoft_Lync_Controls_Internal:SplitButton>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Microsoft_Lync_Controls:StartAudioCallButton.Style>
					<Microsoft_Lync_Controls:StartAudioCallButton.VerticalAlignment>
						<Binding ConverterParameter="Top" Path="PresenceItems.DefaultNote">
							<Binding.Converter>
								<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVerticalAlignment/>
							</Binding.Converter>
						</Binding>
					</Microsoft_Lync_Controls:StartAudioCallButton.VerticalAlignment>
					<Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource Self}">
						<Binding.Converter>
							<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
						</Binding.Converter>
					</Binding>
				</Microsoft_Lync_Controls:StartAudioCallButton>
			</Grid>
			<Grid x:Name="SecondRow" Grid.Column="1" Margin="51,16,0,0" Grid.Row="1" VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.Visibility>
					<Binding Path="PresenceItems.DefaultNote">
						<Binding.Converter>
							<Microsoft_Lync_Controls_Internal_Converters:NullOrEmptyStringToVisibility/>
						</Binding.Converter>
					</Binding>
				</Grid.Visibility>
				<Microsoft_Lync_Controls_Internal:DockPanel FlowDirection="LeftToRight" HorizontalAlignment="Stretch" LastChildFill="True">
					<Microsoft_Lync_Controls_Internal:TruncatedTextBlock x:Name="ContactNoteTruncatedTextBlock" AutomationProperties.AutomationId="DefaultNoteTextBlock" Foreground="{Binding GlobalTextColor_MediumDark}" IsTabStop="False" MaxHeight="14.1">
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
							<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
								<Setter Property="FontSize" Value="10.6"/>
							</Style>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Text>
							<Binding Path="PresenceItems.DefaultNote">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:StringToSingleLineString/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Text>
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
							<Binding ElementName="NoteToggleButton" Path="IsChecked">
								<Binding.Converter>
									<Microsoft_Lync_Controls_Internal_Converters:NotBooleanToVisibility/>
								</Binding.Converter>
							</Binding>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Visibility>
					</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
				</Microsoft_Lync_Controls_Internal:DockPanel>
				<ScrollViewer BorderThickness="0" Height="Auto" HorizontalScrollBarVisibility="Disabled" MaxHeight="53" Margin="0,3,2,0" Padding="0" VerticalScrollBarVisibility="Auto">
					<ScrollViewer.Template>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid x:Name="Grid" Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}"/>
								<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Background="Transparent" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}">
									<ScrollBar.Style>
										<Style TargetType="{x:Type ScrollBar}">
											<Setter Property="Background" Value="Transparent"/>
											<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
											<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type ScrollBar}">
														<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto"/>
																<RowDefinition Height="1E-05*"/>
																<RowDefinition Height="Auto"/>
															</Grid.RowDefinitions>
															<RepeatButton Command="ScrollBar.LineUpCommand" Height="10" IsEnabled="{TemplateBinding IsMouseOver}">
																<RepeatButton.Style>
																	<Style TargetType="{x:Type RepeatButton}">
																		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
																		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type RepeatButton}">
																					<Grid x:Name="LayoutRoot" Background="Transparent">
																						<Path x:Name="Arrow" Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{Binding ScrollButtonContactNoteForegroundBrush}" HorizontalAlignment="Center" Height="5" IsHitTestVisible="False" Stretch="Uniform" VerticalAlignment="Center" Width="7"/>
																					</Grid>
																					<ControlTemplate.Triggers>
																						<Trigger Property="IsMouseOver" Value="True">
																							<Setter Property="Fill" TargetName="Arrow" Value="{Binding ScrollButtonContactNoteHoverBrush}"/>
																						</Trigger>
																					</ControlTemplate.Triggers>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</RepeatButton.Style>
															</RepeatButton>
															<Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
																<Track.DecreaseRepeatButton>
																	<RepeatButton Command="ScrollBar.PageUpCommand">
																		<RepeatButton.Style>
																			<Style TargetType="{x:Type RepeatButton}">
																				<Setter Property="Background" Value="Transparent"/>
																				<Setter Property="Focusable" Value="False"/>
																				<Setter Property="IsTabStop" Value="False"/>
																				<Setter Property="Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="{x:Type RepeatButton}">
																							<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</RepeatButton.Style>
																	</RepeatButton>
																</Track.DecreaseRepeatButton>
																<Track.IncreaseRepeatButton>
																	<RepeatButton Command="ScrollBar.PageDownCommand">
																		<RepeatButton.Style>
																			<Style TargetType="{x:Type RepeatButton}">
																				<Setter Property="Background" Value="Transparent"/>
																				<Setter Property="Focusable" Value="False"/>
																				<Setter Property="IsTabStop" Value="False"/>
																				<Setter Property="Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="{x:Type RepeatButton}">
																							<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</RepeatButton.Style>
																	</RepeatButton>
																</Track.IncreaseRepeatButton>
																<Track.Thumb>
																	<Thumb>
																		<Thumb.Style>
																			<Style TargetType="{x:Type Thumb}">
																				<Setter Property="IsTabStop" Value="False"/>
																				<Setter Property="Template">
																					<Setter.Value>
																						<ControlTemplate TargetType="{x:Type Thumb}">
																							<Grid x:Name="LayoutRoot" Background="Transparent">
																								<Rectangle x:Name="rectangle" Fill="{Binding ScrollButtonContactNoteForegroundBrush}" IsHitTestVisible="False" Margin="6,0"/>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger Property="IsMouseOver" Value="True">
																									<Setter Property="Fill" TargetName="rectangle" Value="{Binding ScrollButtonContactNoteHoverBrush}"/>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</Thumb.Style>
																	</Thumb>
																</Track.Thumb>
															</Track>
															<RepeatButton Command="ScrollBar.LineDownCommand" Height="10" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" RenderTransformOrigin="0.5,0.5">
																<RepeatButton.RenderTransform>
																	<TransformGroup>
																		<ScaleTransform ScaleY="-1" ScaleX="1"/>
																		<SkewTransform AngleY="0" AngleX="0"/>
																		<RotateTransform Angle="0"/>
																		<TranslateTransform/>
																	</TransformGroup>
																</RepeatButton.RenderTransform>
																<RepeatButton.Style>
																	<Style TargetType="{x:Type RepeatButton}">
																		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
																		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="{x:Type RepeatButton}">
																					<Grid x:Name="LayoutRoot" Background="Transparent">
																						<Path x:Name="Arrow" Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{Binding ScrollButtonContactNoteForegroundBrush}" HorizontalAlignment="Center" Height="5" IsHitTestVisible="False" Stretch="Uniform" VerticalAlignment="Center" Width="7"/>
																					</Grid>
																					<ControlTemplate.Triggers>
																						<Trigger Property="IsMouseOver" Value="True">
																							<Setter Property="Fill" TargetName="Arrow" Value="{Binding ScrollButtonContactNoteHoverBrush}"/>
																						</Trigger>
																					</ControlTemplate.Triggers>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</RepeatButton.Style>
															</RepeatButton>
														</Grid>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ScrollBar.Style>
								</ScrollBar>
							</Grid>
						</ControlTemplate>
					</ScrollViewer.Template>
					<ScrollViewer.Visibility>
						<Binding ElementName="NoteToggleButton" FallbackValue="Collapsed" Path="IsChecked">
							<Binding.Converter>
								<Microsoft_Lync_Controls_Internal_Converters:BooleanToVisibility/>
							</Binding.Converter>
						</Binding>
					</ScrollViewer.Visibility>
					<TextBlock AutomationProperties.AutomationId="DefaultNoteFullLength" Foreground="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding PresenceItems.DefaultNote}">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="FontSize" Value="10.6"/>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</ScrollViewer>
				<Canvas Grid.Column="1" Margin="0,6,2,2" VerticalAlignment="Top">
					<Canvas.Visibility>
						<Binding ElementName="ContactNoteTruncatedTextBlock" Path="IsTruncated">
							<Binding.Converter>
								<Microsoft_Lync_Controls_Internal_Converters:BooleanToVisibility/>
							</Binding.Converter>
						</Binding>
					</Canvas.Visibility>
					<Border BorderThickness="1" CornerRadius="1" Height="11" Visibility="{Binding CallButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="11">
						<Border.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#FFB6BABF"/>
								<GradientStop Color="#FF9A9FA5" Offset="1"/>
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
								<GradientStop Color="White" Offset="0.418"/>
								<GradientStop Color="#FFEBEBEC" Offset="0.928"/>
							</LinearGradientBrush>
						</Border.Background>
					</Border>
				</Canvas>
				<ToggleButton x:Name="NoteToggleButton" AutomationProperties.AutomationId="Note toggle button" Grid.Column="1" IsChecked="{Binding IsNoteToggleButtonChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,6,2,2" AutomationProperties.Name="Note toggle button" VerticalAlignment="Top">
					<ToggleButton.Style>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Width" Value="11"/>
							<Setter Property="Height" Value="11"/>
							<Setter Property="IsTabStop" Value="False"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Grid Background="Transparent">
											<Border x:Name="HoverBorder" BorderThickness="1" Background="{Binding ContactNoteButtonHoverBrush}" CornerRadius="1" Visibility="Collapsed">
												<Border.BorderBrush>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFA3D9E8"/>
														<GradientStop Color="#FF56B0C8" Offset="1"/>
													</LinearGradientBrush>
												</Border.BorderBrush>
											</Border>
											<Border x:Name="FocusBorder" BorderThickness="1" Background="{x:Null}" CornerRadius="1" Visibility="Collapsed">
												<Border.BorderBrush>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FFA3D9E8"/>
														<GradientStop Color="#FF56B0C8" Offset="1"/>
													</LinearGradientBrush>
												</Border.BorderBrush>
											</Border>
											<Border x:Name="PressedBorder" BorderThickness="1" Background="{Binding ContactNoteButtonHoverBrush}" CornerRadius="1" Visibility="Collapsed">
												<Border.BorderBrush>
													<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
														<GradientStop Color="#FF5DBFDA"/>
														<GradientStop Color="#FFBCE9F5" Offset="1"/>
													</LinearGradientBrush>
												</Border.BorderBrush>
											</Border>
											<Path x:Name="Arrow" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{Binding ContactNoteButtonForegroundBrush}" Height="3" Stretch="Uniform" Width="5">
												<Path.RenderTransform>
													<TransformGroup>
														<ScaleTransform/>
														<SkewTransform/>
														<RotateTransform/>
														<TranslateTransform/>
													</TransformGroup>
												</Path.RenderTransform>
											</Path>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ToggleButton.Style>
					<ToggleButton.Visibility>
						<Binding ElementName="ContactNoteTruncatedTextBlock" Path="IsTruncated">
							<Binding.Converter>
								<Microsoft_Lync_Controls_Internal_Converters:BooleanToVisibility/>
							</Binding.Converter>
						</Binding>
					</ToggleButton.Visibility>
				</ToggleButton>
			</Grid>
		</Grid>
	</DataTemplate>
    
	<DataTemplate x:Key="CustomizedTelefoneContactTemplate">
		<Grid Background="Transparent" HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="19"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="4"/>
				<RowDefinition Height="36"/>
				<RowDefinition Height="4"/>
			</Grid.RowDefinitions>
			<Microsoft_Lync_Controls_Internal:FocuslessButton Grid.Column="1" Focusable="False" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Microsoft_Lync_Controls_Internal:PopupContactCardHost.IsHoverOnTarget="False" Grid.Row="1">
				<Microsoft_Lync_Controls_Internal:FocuslessButton.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Padding" Value="0"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Grid x:Name="grid">
										<Border x:Name="HoverGlow" BorderBrush="{Binding ContactNameHoverBrush}" BorderThickness="1" Background="Transparent" CornerRadius="1" HorizontalAlignment="Left" Height="36" Visibility="Collapsed" Width="45">
											<Border.Effect>
												<DropShadowEffect BlurRadius="3" Color="#FF4CCCE5" ShadowDepth="0"/>
											</Border.Effect>
										</Border>
										<ContentControl x:Name="PresenterContainer" Background="Transparent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{Binding GlobalTextColor_Black}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
										<Border x:Name="HoverBorder" BorderBrush="{Binding ContactNameHoverBrush}" BorderThickness="1" Background="Transparent" CornerRadius="1" HorizontalAlignment="Left" Height="36" Visibility="Collapsed" Width="45"/>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Microsoft_Lync_Controls_Internal:FocuslessButton.Style>
				<Microsoft_Lync_Controls_Internal:DockPanel LastChildFill="True">
					<Microsoft_Lync_Controls:AvailabilityIcon x:Name="PART_PresenceIndicator" ContextualInformation="{Binding ContextualInformation, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="36" IsTabStop="False" PhotoDisplayMode="Small" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Width="45"/>
					<Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="NameTextBlock" IsTabStop="False" Margin="6,0,0,0" Text="{Binding PresenceItems.Name}" VerticalAlignment="Center">
						<Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
							<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
								<Setter Property="UseEllipsis" Value="True"/>
								<Setter Property="VerticalAlignment" Value="Bottom"/>
								<Style.BasedOn>
									<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
										<Setter Property="FontSize" Value="12"/>
									</Style>
								</Style.BasedOn>
							</Style>
						</Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
					</Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
				</Microsoft_Lync_Controls_Internal:DockPanel>
			</Microsoft_Lync_Controls_Internal:FocuslessButton>
			<Microsoft_Lync_Controls:StartAudioCallButton x:Name="PART_CallButton" ContextualInformation="{Binding ContextualInformation, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" IsTabStop="False" Margin="6,0,1,0" Grid.Row="1" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
				<Microsoft_Lync_Controls:StartAudioCallButton.Style>
					<Style TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
						<Setter Property="Margin" Value="12,-1,0,0"/>
						<Setter Property="IsTabStop" Value="False"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
									<Microsoft_Lync_Controls_Internal:SplitButton x:Name="PART_CommandControl" AutomationProperties.AutomationId="StartAudioVideoButton" Command="{Binding StartConferenceCallConditionalCommand, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding GlobalTextColor_Black}" Height="20" IsTabStop="False">
										<Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
											<Binding Path="ContextualInformation" RelativeSource="{RelativeSource TemplatedParent}">
												<Binding.Converter>
													<Microsoft_Lync_Controls_Internal_Converters:ConversationContextToContextModel/>
												</Binding.Converter>
											</Binding>
										</Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
										<Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
											<Microsoft_Lync_Controls_Internal:ContextMenu Foreground="{Binding GlobalTextColor_Black}" FontWeight="Bold" FontSize="10.6" Owner="{x:Null}">
												<Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
													<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
														<Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
															<Setter.Value>
																<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
																	<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
																</Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
															</Setter.Value>
														</Setter>
														<Setter Property="CommandParameter" Value="{Binding}"/>
														<Setter Property="Command" Value="{Binding ContactEndpoint.PresenceItems.Contact.StartAudioVideoCommand}"/>
														<Setter Property="Header">
															<Setter.Value>
																<Binding Path="ContactEndpoint.Type">
																	<Binding.Converter>
																		<Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
																	</Binding.Converter>
																</Binding>
															</Setter.Value>
														</Setter>
														<Setter Property="AutomationProperties.Name" Value="{Binding ContactEndpoint.Uri}"/>
														<Setter Property="AutomationProperties.AutomationId">
															<Setter.Value>
																<Binding Path="ContactEndpoint.Type">
																	<Binding.Converter>
																		<Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
																	</Binding.Converter>
																</Binding>
															</Setter.Value>
														</Setter>
														<Setter Property="Icon">
															<Setter.Value>
																<Binding Path="ContactEndpoint">
																	<Binding.Converter>
																		<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
																	</Binding.Converter>
																</Binding>
															</Setter.Value>
														</Setter>
														<Setter Property="Height" Value="36"/>
														<Setter Property="FontWeight" Value="Normal"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																	<Grid Background="Transparent">
																		<Grid Margin="1" SnapsToDevicePixels="True">
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="25"/>
																				<ColumnDefinition Width="1"/>
																				<ColumnDefinition Width="*"/>
																				<ColumnDefinition Width="Auto"/>
																				<ColumnDefinition Width="Auto"/>
																			</Grid.ColumnDefinitions>
																			<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																			<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																			<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																			<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,4,4,4" VerticalAlignment="Top" Width="16"/>
																			<StackPanel Grid.Column="2" Margin="7,0" VerticalAlignment="Center">
																				<ContentControl x:Name="CoreContentControl" Foreground="{Binding GlobalTextColor_Black}">
																					<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																				</ContentControl>
																				<ContentControl x:Name="DisplayNameControl" Foreground="{Binding GlobalTextColor_MediumDark}">
																					<ContentPresenter Content="{Binding ContactEndpoint.DisplayName}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
																				</ContentControl>
																			</StackPanel>
																			<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																		</Grid>
																		<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																			<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																				<Border.Effect>
																					<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																				</Border.Effect>
																				<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																					<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																				</ScrollViewer>
																			</Border>
																		</Popup>
																	</Grid>
																	<ControlTemplate.Triggers>
																		<Trigger Property="Icon" Value="{x:Null}">
																			<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																		</Trigger>
																		<Trigger Property="IsHighlighted" Value="True">
																			<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																			<Setter Property="Foreground" TargetName="CoreContentControl" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																			<Setter Property="Foreground" TargetName="DisplayNameControl" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																		</Trigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																			<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																			<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																		</Trigger>
																		<Trigger Property="HasItems" Value="False">
																			<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
														<Style.BasedOn>
															<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																<Setter Property="Height" Value="26"/>
																<Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																			<Grid Background="Transparent">
																				<Grid Margin="1" SnapsToDevicePixels="True">
																					<Grid.ColumnDefinitions>
																						<ColumnDefinition Width="25"/>
																						<ColumnDefinition Width="1"/>
																						<ColumnDefinition Width="*"/>
																						<ColumnDefinition Width="Auto"/>
																						<ColumnDefinition Width="Auto"/>
																					</Grid.ColumnDefinitions>
																					<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																					<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																					<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																					<Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
																						<Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
																					</Border>
																					<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
																					<ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
																						<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																					</ContentControl>
																					<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																				</Grid>
																				<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																					<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																						<Border.Effect>
																							<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																						</Border.Effect>
																						<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																							<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																						</ScrollViewer>
																					</Border>
																				</Popup>
																			</Grid>
																			<ControlTemplate.Triggers>
																				<Trigger Property="Icon" Value="{x:Null}">
																					<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																					<Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
																				</Trigger>
																				<Trigger Property="IsChecked" Value="True">
																					<Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
																					<Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																				</Trigger>
																				<Trigger Property="IsHighlighted" Value="True">
																					<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																					<Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																					<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																					<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																					<Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
																				</Trigger>
																				<Trigger Property="HasItems" Value="False">
																					<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																				</Trigger>
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
															</Style>
														</Style.BasedOn>
													</Style>
												</Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
												<Microsoft_Lync_Controls_Internal:ContextMenu.Style>
													<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
																	<ControlTemplate.Resources>
																		<Style x:Key="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}" TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																			<Style.BasedOn>
																				<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																					<Setter Property="Height" Value="26"/>
																					<Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
																					<Setter Property="Template">
																						<Setter.Value>
																							<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
																								<Grid Background="Transparent">
																									<Grid Margin="1" SnapsToDevicePixels="True">
																										<Grid.ColumnDefinitions>
																											<ColumnDefinition Width="25"/>
																											<ColumnDefinition Width="1"/>
																											<ColumnDefinition Width="*"/>
																											<ColumnDefinition Width="Auto"/>
																											<ColumnDefinition Width="Auto"/>
																										</Grid.ColumnDefinitions>
																										<Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
																										<Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																										<Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
																										<Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
																											<Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
																										</Border>
																										<ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
																										<ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
																											<ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
																										</ContentControl>
																										<Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
																									</Grid>
																									<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
																										<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																											<Border.Effect>
																												<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																											</Border.Effect>
																											<ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
																												<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
																											</ScrollViewer>
																										</Border>
																									</Popup>
																								</Grid>
																								<ControlTemplate.Triggers>
																									<Trigger Property="Icon" Value="{x:Null}">
																										<Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
																										<Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
																									</Trigger>
																									<Trigger Property="IsChecked" Value="True">
																										<Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
																										<Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
																									</Trigger>
																									<Trigger Property="IsHighlighted" Value="True">
																										<Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
																										<Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
																									</Trigger>
																									<Trigger Property="IsEnabled" Value="False">
																										<Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
																										<Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
																										<Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
																										<Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
																									</Trigger>
																									<Trigger Property="HasItems" Value="False">
																										<Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
																									</Trigger>
																								</ControlTemplate.Triggers>
																							</ControlTemplate>
																						</Setter.Value>
																					</Setter>
																				</Style>
																			</Style.BasedOn>
																		</Style>
																	</ControlTemplate.Resources>
																	<Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
																		<Border.Effect>
																			<DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
																		</Border.Effect>
																		<StackPanel KeyboardNavigation.DirectionalNavigation="Cycle" IsItemsHost="True" Margin="0"/>
																	</Border>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Microsoft_Lync_Controls_Internal:ContextMenu.Style>
											</Microsoft_Lync_Controls_Internal:ContextMenu>
										</Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
										<Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
											<ToolTip>
												<ToolTip.Style>
													<Style TargetType="{x:Type ToolTip}"/>
												</ToolTip.Style>
												<Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource TemplatedParent}">
													<Binding.Converter>
														<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToStartAudioConversationToolTip/>
													</Binding.Converter>
												</Binding>
											</ToolTip>
										</Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
										<Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
											<ToolTip Content="{Binding Resources.TooltipCallButtonViewMoreCallOptions}">
												<ToolTip.Style>
													<Style TargetType="{x:Type ToolTip}"/>
												</ToolTip.Style>
											</ToolTip>
										</Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
										<Microsoft_Lync_Controls_Internal:SplitButton.Style>
											<Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
												<Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
													<Setter.Value>
														<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
															<Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
														</Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
													</Setter.Value>
												</Setter>
												<Setter Property="FontSize" Value="10.6"/>
												<Setter Property="HorizontalContentAlignment" Value="Left"/>
												<Setter Property="VerticalContentAlignment" Value="Top"/>
												<Setter Property="Padding" Value="0"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
															<Grid x:Name="TemplateRoot">
																<Grid.ColumnDefinitions>
																	<ColumnDefinition Width="*"/>
																	<ColumnDefinition Width="12"/>
																</Grid.ColumnDefinitions>
																<Border x:Name="RightSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Visibility="Visible">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="0,2,2,0"/>
																			<Setter Property="Grid.Column" Value="1"/>
																			<Setter Property="Margin" Value="-1,0,0,0"/>
																		</Style>
																	</Border.Style>
																</Border>
																<Border x:Name="LeftSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Grid.Column="0" Visibility="Visible">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="2,0,0,2"/>
																		</Style>
																	</Border.Style>
																</Border>
																<Border x:Name="LeftSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}" Grid.Column="0">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="2,0,0,2"/>
																		</Style>
																	</Border.Style>
																	<Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
																</Border>
																<Border x:Name="LeftSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}" Grid.Column="0">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="2,0,0,2"/>
																		</Style>
																	</Border.Style>
																	<Grid>
																		<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
																		<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
																	</Grid>
																</Border>
																<Border x:Name="RightSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="0,2,2,0"/>
																			<Setter Property="Grid.Column" Value="1"/>
																			<Setter Property="Margin" Value="-1,0,0,0"/>
																		</Style>
																	</Border.Style>
																	<Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
																</Border>
																<Border x:Name="RightSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}">
																	<Border.Style>
																		<Style TargetType="{x:Type Border}">
																			<Setter Property="Visibility" Value="Collapsed"/>
																			<Setter Property="BorderThickness" Value="1"/>
																			<Setter Property="CornerRadius" Value="0,2,2,0"/>
																			<Setter Property="Grid.Column" Value="1"/>
																			<Setter Property="Margin" Value="-1,0,0,0"/>
																		</Style>
																	</Border.Style>
																	<Grid>
																		<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
																		<Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
																	</Grid>
																</Border>
																<Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_LeftButton" AutomationProperties.AutomationId="LeftButton" Background="Transparent" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.Click="{TemplateBinding Command}" Content="{TemplateBinding Content}" Grid.Column="0" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.CommandParameter="{TemplateBinding CommandParameter}" IsTabStop="False" Margin="2" Padding="{TemplateBinding Padding}">
																	<Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																		<Style TargetType="{x:Type Button}">
																			<Setter Property="Template">
																				<Setter.Value>
																					<ControlTemplate TargetType="{x:Type Button}">
																						<Grid Background="Transparent">
																							<Border x:Name="presenterContainer" Margin="{TemplateBinding Padding}">
																								<ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
																							</Border>
																						</Grid>
																					</ControlTemplate>
																				</Setter.Value>
																			</Setter>
																			<Style.BasedOn>
																				<Style TargetType="{x:Type Control}">
																					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																				</Style>
																			</Style.BasedOn>
																		</Style>
																	</Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																</Microsoft_Lync_Controls_Internal:HelpTextButton>
																<Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_RightButton" AutomationProperties.AutomationId="RightButton" Grid.Column="1" IsTabStop="False" Margin="-1,0,0,0" Width="13">
																	<Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																		<Style TargetType="{x:Type Button}">
																			<Setter Property="Template">
																				<Setter.Value>
																					<ControlTemplate TargetType="{x:Type Button}">
																						<Grid Background="Transparent">
																							<Border x:Name="presenterContainer">
																								<ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																							</Border>
																						</Grid>
																					</ControlTemplate>
																				</Setter.Value>
																			</Setter>
																			<Style.BasedOn>
																				<Style TargetType="{x:Type Control}">
																					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
																				</Style>
																			</Style.BasedOn>
																		</Style>
																	</Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
																	<Path x:Name="path" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Stretch" Height="3" Margin="3,0,4,0" Stretch="Uniform" VerticalAlignment="Center" Width="5"/>
																</Microsoft_Lync_Controls_Internal:HelpTextButton>
															</Grid>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Microsoft_Lync_Controls_Internal:SplitButton.Style>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20"/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<ContentPresenter Margin="4,0,0,0" VerticalAlignment="Top">
												<ContentPresenter.Content>
													<Binding Path="DefaultEndpoint">
														<Binding.Converter>
															<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
														</Binding.Converter>
													</Binding>
												</ContentPresenter.Content>
											</ContentPresenter>
											<TextBlock Grid.Column="1" Foreground="{Binding GlobalTextColor_Dark}" FontWeight="SemiBold" Margin="4,0" Text="{Binding Resources.CallButtonLabel}" VerticalAlignment="Center"><TextBlock.Style>
													<Style TargetType="{x:Type TextBlock}">
														<Setter Property="FontSize" Value="10.6"/>
													</Style>
												</TextBlock.Style><Run Text="Call"/></TextBlock>
										</Grid>
									</Microsoft_Lync_Controls_Internal:SplitButton>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Microsoft_Lync_Controls:StartAudioCallButton.Style>
				<Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource Self}">
					<Binding.Converter>
						<Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
					</Binding.Converter>
				</Binding>
			</Microsoft_Lync_Controls:StartAudioCallButton>
		</Grid>
	</DataTemplate>

    <DataTemplate x:Key="CustomizedGroupContactTemplate">
        <Grid Background="#00000000" HorizontalAlignment="Stretch" Height="24" Microsoft_Lync_Controls_Internal:PopupContactCardHost.IsHoverOnTarget="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition MaxWidth="16" Width="16"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="1" VerticalAlignment="Center">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Width" Value="14"/>
                        <Setter Property="Height" Value="14"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Canvas Clip="F1M0,0L14.0363,0 14.0363,14.2487 0,14.2487 0,0" Height="14" Width="14">
                                        <Rectangle Fill="#00E9F6FF" Height="14" Canvas.Left="0.0362925" Stretch="Fill" Canvas.Top="0.20491" Width="14"/>
                                        <Path Data="M6.05151,6.97283C6.11227,5.28496 4.94467,4.15952 3.57707,4.15952 2.21056,4.15952 1.07224,5.28496 1.10281,6.97283 1.13043,8.52629 2.62604,9.96092 3.68886,9.96092 4.81356,9.96092 5.99663,8.52572 6.05151,6.97283z" Fill="White" Height="6.5514" Canvas.Left="0.727205" Stretch="Fill" Stroke="#FF3B3B3B" StrokeThickness="0.75" StrokeMiterLimit="2.75" Canvas.Top="3.78452" Width="5.70158"/>
                                        <Path Data="F1M12.0046,3.6567C12.0654,1.96502 10.8978,0.912697 9.53019,0.998337 8.16368,1.08391 7.02536,2.28063 7.05593,3.96659 7.08355,5.51831 8.57916,6.85929 9.64198,6.79273 10.7667,6.72231 11.9498,5.21302 12.0046,3.6567z" Fill="White" Height="6.55163" Canvas.Left="6.68033" Stretch="Fill" Stroke="#FF3B3B3B" StrokeThickness="0.75" StrokeMiterLimit="2.75" Canvas.Top="0.618476" Width="5.70157"/>
                                        <Path Data="F1M1.52379,9.24866L5.52379,9.24866C6.07607,9.24866,6.52379,9.69637,6.52379,10.2487L6.52379,12.7487C6.52379,13.3009,6.07607,13.7487,5.52379,13.7487L1.52379,13.7487C0.971503,13.7487,0.523788,13.3009,0.523788,12.7487L0.523788,10.2487C0.523788,9.69637,0.971503,9.24866,1.52379,9.24866z" Fill="White" Height="5.5" Canvas.Left="0.023788" Stretch="Fill" Stroke="#FF3B3B3B" StrokeMiterLimit="2.75" Canvas.Top="8.74866" Width="7"/>
                                        <Path Data="F1M5.35,8.96069C6.4092,8.42936 7.14062,7.5919 7.14062,6.34469 7.14062,4.50092 5.54214,3.00625 3.57031,3.00625 1.59848,3.00625 -1.49012E-08,4.50092 -1.49012E-08,6.34469 -1.49012E-08,7.65372 0.805743,8.5368 1.97878,9.08392 3.15182,9.63103 1.27188,8.75397 1.17813,7.5256 1.08438,6.29722 1.30313,5.71452 1.30313,5.71452L5.8344,5.71452C5.8344,5.71452 6.11563,6.78542 5.92812,7.65159 5.74062,8.51775 5.35,8.96069 5.35,8.96069z" Fill="#FF3B3B3B" Height="6.24388" Canvas.Left="-1.49012E-08" Stretch="Fill" Canvas.Top="3.00625" Width="7.14062"/>
                                        <Path Data="F1M11.3031,5.95443C12.3623,5.42311 13.0937,4.58565 13.0937,3.33844 13.0937,1.49467 11.4953,0 9.52344,0 7.55161,0 5.95312,1.49467 5.95312,3.33844 5.95312,4.64748 6.75887,5.53054 7.93191,6.07767 9.10495,6.62479 7.225,5.74773 7.13125,4.51935 7.0375,3.29096 7.25625,2.70827 7.25625,2.70827L11.7875,2.70827C11.7875,2.70827 12.0688,3.77917 11.8812,4.64533 11.6937,5.5115 11.3031,5.95443 11.3031,5.95443z" Fill="#FF3B3B3B" Height="6.24388" Canvas.Left="5.95312" Stretch="Fill" Canvas.Top="0" Width="7.14062"/>
                                        <Path Data="F1M1.24463,9.51741L3.50504,11.7674 5.80713,9.47575" Fill="White" Height="3.29166" Canvas.Left="0.744626" Stretch="Fill" Stroke="#FF3B3B3B" StrokeMiterLimit="2.75" Canvas.Top="8.97575" Width="5.5625"/>
                                        <Path Data="F1M7.53629,6.22991L11.5363,6.22991C12.0886,6.22991,12.5363,6.67763,12.5363,7.22991L12.5363,9.72991C12.5363,10.2822,12.0886,10.7299,11.5363,10.7299L7.53629,10.7299C6.98401,10.7299,6.53629,10.2822,6.53629,9.72991L6.53629,7.22991C6.53629,6.67763,6.98401,6.22991,7.53629,6.22991z" Fill="White" Height="5.5" Canvas.Left="6.03629" Stretch="Fill" Stroke="#FF3B3B3B" StrokeMiterLimit="2.75" Canvas.Top="5.72991" Width="7"/>
                                        <Path Data="F1M7.22379,6.47575L9.51755,8.74866 11.7863,6.47575" Fill="White" Height="3.27291" Canvas.Left="6.72379" Stretch="Fill" Stroke="#FF3B3B3B" StrokeMiterLimit="2.75" Canvas.Top="5.97575" Width="5.5625"/>
                                    </Canvas>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="Width" Value="16"/>
                                <Setter Property="Height" Value="16"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
            <Microsoft_Lync_Controls_Internal:TruncatedTextBlock AutomationProperties.AutomationId="NameTextBlock" Grid.Column="2" Foreground="{Binding GlobalTextColor_Black}" IsTabStop="False" Margin="0,0,0,3" MinWidth="15" Text="{Binding PresenceItems.Name}" UseEllipsis="True" VerticalAlignment="Bottom">
                <Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
                    <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
                        <Setter Property="UseEllipsis" Value="True"/>
                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:TruncatedTextBlock}">
                                <Setter Property="FontSize" Value="12"/>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Microsoft_Lync_Controls_Internal:TruncatedTextBlock.Style>
            </Microsoft_Lync_Controls_Internal:TruncatedTextBlock>
            <Microsoft_Lync_Controls:StartAudioCallButton x:Name="PART_CallButton" ContextualInformation="{Binding ContextualInformation, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="3" Foreground="{Binding GlobalTextColor_Black}" IsTabStop="False" Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                <Microsoft_Lync_Controls:StartAudioCallButton.Style>
                    <Style TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
                        <Setter Property="Margin" Value="12,-1,0,0"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls:StartAudioCallButton}">
                                    <Microsoft_Lync_Controls_Internal:SplitButton x:Name="PART_CommandControl" AutomationProperties.AutomationId="StartAudioVideoButton" Command="{Binding StartConferenceCallConditionalCommand, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding GlobalTextColor_Black}" Height="20" IsTabStop="False">
                                        <Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
                                            <Binding Path="ContextualInformation" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <Microsoft_Lync_Controls_Internal_Converters:ConversationContextToContextModel/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Microsoft_Lync_Controls_Internal:SplitButton.CommandParameter>
                                        <Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
                                            <Microsoft_Lync_Controls_Internal:ContextMenu Foreground="{Binding GlobalTextColor_Black}" FontWeight="Bold" FontSize="10.6" Owner="{x:Null}">
                                                <Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
                                                    <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                        <Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
                                                            <Setter.Value>
                                                                <Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
                                                                    <Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
                                                                </Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                                        <Setter Property="Command" Value="{Binding ContactEndpoint.PresenceItems.Contact.StartAudioVideoCommand}"/>
                                                        <Setter Property="Header">
                                                            <Setter.Value>
                                                                <Binding Path="ContactEndpoint.Type">
                                                                    <Binding.Converter>
                                                                        <Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="AutomationProperties.Name" Value="{Binding ContactEndpoint.Uri}"/>
                                                        <Setter Property="AutomationProperties.AutomationId">
                                                            <Setter.Value>
                                                                <Binding Path="ContactEndpoint.Type">
                                                                    <Binding.Converter>
                                                                        <Microsoft_Lync_Controls_Internal_Converters:ControlsEnumToString IsAcceleratorContext="False"/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Icon">
                                                            <Setter.Value>
                                                                <Binding Path="ContactEndpoint">
                                                                    <Binding.Converter>
                                                                        <Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Height" Value="36"/>
                                                        <Setter Property="FontWeight" Value="Normal"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                    <Grid Background="Transparent">
                                                                        <Grid Margin="1" SnapsToDevicePixels="True">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="25"/>
                                                                                <ColumnDefinition Width="1"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
                                                                            <Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                            <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                            <ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,4,4,4" VerticalAlignment="Top" Width="16"/>
                                                                            <StackPanel Grid.Column="2" Margin="7,0" VerticalAlignment="Center">
                                                                                <ContentControl x:Name="CoreContentControl" Foreground="{Binding GlobalTextColor_Black}">
                                                                                    <ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                                                                </ContentControl>
                                                                                <ContentControl x:Name="DisplayNameControl" Foreground="{Binding GlobalTextColor_MediumDark}">
                                                                                    <ContentPresenter Content="{Binding ContactEndpoint.DisplayName}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                                                </ContentControl>
                                                                            </StackPanel>
                                                                            <Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
                                                                        </Grid>
                                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                                                            <Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
                                                                                <Border.Effect>
                                                                                    <DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
                                                                                </Border.Effect>
                                                                                <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                </ScrollViewer>
                                                                            </Border>
                                                                        </Popup>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="Icon" Value="{x:Null}">
                                                                            <Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsHighlighted" Value="True">
                                                                            <Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
                                                                            <Setter Property="Foreground" TargetName="CoreContentControl" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
                                                                            <Setter Property="Foreground" TargetName="DisplayNameControl" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
                                                                            <Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
                                                                            <Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
                                                                        </Trigger>
                                                                        <Trigger Property="HasItems" Value="False">
                                                                            <Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.BasedOn>
                                                            <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                <Setter Property="Height" Value="26"/>
                                                                <Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                            <Grid Background="Transparent">
                                                                                <Grid Margin="1" SnapsToDevicePixels="True">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="25"/>
                                                                                        <ColumnDefinition Width="1"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                        <ColumnDefinition Width="Auto"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
                                                                                    <Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                    <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                    <Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
                                                                                        <Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
                                                                                    </Border>
                                                                                    <ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
                                                                                    <ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
                                                                                        <ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                                                                    </ContentControl>
                                                                                    <Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
                                                                                </Grid>
                                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                                                                    <Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
                                                                                        <Border.Effect>
                                                                                            <DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
                                                                                        </Border.Effect>
                                                                                        <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                        </ScrollViewer>
                                                                                    </Border>
                                                                                </Popup>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="Icon" Value="{x:Null}">
                                                                                    <Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
                                                                                    <Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
                                                                                    <Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsHighlighted" Value="True">
                                                                                    <Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
                                                                                    <Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                    <Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
                                                                                    <Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
                                                                                    <Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
                                                                                    <Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
                                                                                </Trigger>
                                                                                <Trigger Property="HasItems" Value="False">
                                                                                    <Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Style.BasedOn>
                                                    </Style>
                                                </Microsoft_Lync_Controls_Internal:ContextMenu.ItemContainerStyle>
                                                <Microsoft_Lync_Controls_Internal:ContextMenu.Style>
                                                    <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:ContextMenu}">
                                                                    <ControlTemplate.Resources>
                                                                        <Style x:Key="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}" TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                                    <Setter Property="Height" Value="26"/>
                                                                                    <Setter Property="Foreground" Value="{Binding GlobalTextColor_Black}"/>
                                                                                    <Setter Property="Template">
                                                                                        <Setter.Value>
                                                                                            <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:MenuItem}">
                                                                                                <Grid Background="Transparent">
                                                                                                    <Grid Margin="1" SnapsToDevicePixels="True">
                                                                                                        <Grid.ColumnDefinitions>
                                                                                                            <ColumnDefinition Width="25"/>
                                                                                                            <ColumnDefinition Width="1"/>
                                                                                                            <ColumnDefinition Width="*"/>
                                                                                                            <ColumnDefinition Width="Auto"/>
                                                                                                            <ColumnDefinition Width="Auto"/>
                                                                                                        </Grid.ColumnDefinitions>
                                                                                                        <Path Grid.Column="1" Data="M156,84L156,123" Margin="0,-1.5" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFE2E4E7" VerticalAlignment="Stretch" Width="1"/>
                                                                                                        <Rectangle x:Name="HoverFill" Grid.ColumnSpan="4" Fill="{Binding MenuItemHoverBackgroundBrush}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                                        <Rectangle x:Name="FocusVisualElement" Grid.ColumnSpan="4" Fill="{x:Null}" IsHitTestVisible="False" Stroke="{Binding MenuItemHoverBorderBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="IsCheckedGrid" BorderBrush="{Binding MenuItemHoverBorderBrush}" BorderThickness="1" Background="{Binding MenuItemCheckedBackgroundBrush}" HorizontalAlignment="Left" Height="20" Margin="3,2,0,0" Visibility="Collapsed" VerticalAlignment="Top" Width="20">
                                                                                                            <Path x:Name="Checkmark" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{Binding GlobalTextColor_MediumDark}" Height="11" Visibility="Collapsed" Width="9"/>
                                                                                                        </Border>
                                                                                                        <ContentPresenter x:Name="CustomIcon" ContentTemplate="{x:Null}" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" Margin="5,3,0,0" Visibility="Visible" VerticalAlignment="Center" Width="16"/>
                                                                                                        <ContentControl x:Name="CoreContentContainer" Grid.Column="2" Foreground="{TemplateBinding Foreground}" IsTabStop="False">
                                                                                                            <ContentPresenter x:Name="CoreContent" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="7,0" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                                                                                        </ContentControl>
                                                                                                        <Path x:Name="PART_DropDownArrow" Grid.Column="3" Data="M0,0L1,0.5 0,1z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Right" Height="6" Margin="0,0,7,0" Stretch="Fill" Visibility="Visible" VerticalAlignment="Center" Width="4"/>
                                                                                                    </Grid>
                                                                                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                                                                                                        <Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
                                                                                                            <Border.Effect>
                                                                                                                <DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
                                                                                                            </Border.Effect>
                                                                                                            <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                                                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                                            </ScrollViewer>
                                                                                                        </Border>
                                                                                                    </Popup>
                                                                                                </Grid>
                                                                                                <ControlTemplate.Triggers>
                                                                                                    <Trigger Property="Icon" Value="{x:Null}">
                                                                                                        <Setter Property="Visibility" TargetName="CustomIcon" Value="Collapsed"/>
                                                                                                        <Setter Property="Visibility" TargetName="Checkmark" Value="Visible"/>
                                                                                                    </Trigger>
                                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                                        <Setter Property="Visibility" TargetName="IsCheckedGrid" Value="Visible"/>
                                                                                                        <Setter Property="Fill" TargetName="Checkmark" Value="{Binding GlobalTextColor_HoverForegroundMediumDark}"/>
                                                                                                    </Trigger>
                                                                                                    <Trigger Property="IsHighlighted" Value="True">
                                                                                                        <Setter Property="Visibility" TargetName="HoverFill" Value="Visible"/>
                                                                                                        <Setter Property="Foreground" TargetName="CoreContentContainer" Value="{Binding GlobalTextColor_HoverForegroundBlack}"/>
                                                                                                    </Trigger>
                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                        <Setter Property="Opacity" TargetName="CoreContent" Value="0.4"/>
                                                                                                        <Setter Property="Opacity" TargetName="CustomIcon" Value="0.4"/>
                                                                                                        <Setter Property="Opacity" TargetName="PART_DropDownArrow" Value="0.4"/>
                                                                                                        <Setter Property="Opacity" TargetName="IsCheckedGrid" Value="0.4"/>
                                                                                                    </Trigger>
                                                                                                    <Trigger Property="HasItems" Value="False">
                                                                                                        <Setter Property="Visibility" TargetName="PART_DropDownArrow" Value="Collapsed"/>
                                                                                                    </Trigger>
                                                                                                </ControlTemplate.Triggers>
                                                                                            </ControlTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </ControlTemplate.Resources>
                                                                    <Border x:Name="Border" BorderBrush="#FFA7ABB0" BorderThickness="1" Background="{Binding MenuBackgroundBrush}" Margin="0,0,10,10" Padding="0">
                                                                        <Border.Effect>
                                                                            <DropShadowEffect BlurRadius="4" Opacity="0.6" ShadowDepth="3"/>
                                                                        </Border.Effect>
                                                                        <StackPanel KeyboardNavigation.DirectionalNavigation="Cycle" IsItemsHost="True" Margin="0"/>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Microsoft_Lync_Controls_Internal:ContextMenu.Style>
                                            </Microsoft_Lync_Controls_Internal:ContextMenu>
                                        </Microsoft_Lync_Controls_Internal:SplitButton.DropDown>
                                        <Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
                                            <ToolTip>
                                                <ToolTip.Style>
                                                    <Style TargetType="{x:Type ToolTip}"/>
                                                </ToolTip.Style>
                                                <Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToStartAudioConversationToolTip/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </ToolTip>
                                        </Microsoft_Lync_Controls_Internal:SplitButton.LeftToolTip>
                                        <Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
                                            <ToolTip Content="{Binding Resources.TooltipCallButtonViewMoreCallOptions}">
                                                <ToolTip.Style>
                                                    <Style TargetType="{x:Type ToolTip}"/>
                                                </ToolTip.Style>
                                            </ToolTip>
                                        </Microsoft_Lync_Controls_Internal:SplitButton.RightToolTip>
                                        <Microsoft_Lync_Controls_Internal:SplitButton.Style>
                                            <Style TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
                                                <Setter Property="Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper.PropertyBindingCollection">
                                                    <Setter.Value>
                                                        <Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
                                                            <Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelper Binding="{Binding GlobalTextColor_Black}" Property="Foreground" Type="{x:Null}"/>
                                                        </Microsoft_Lync_Internal_Utilities_Helpers:SetterValueBindingHelperCollection>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="FontSize" Value="10.6"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Microsoft_Lync_Controls_Internal:SplitButton}">
                                                            <Grid x:Name="TemplateRoot">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="12"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Border x:Name="RightSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Visibility="Visible">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="0,2,2,0"/>
                                                                            <Setter Property="Grid.Column" Value="1"/>
                                                                            <Setter Property="Margin" Value="-1,0,0,0"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                </Border>
                                                                <Border x:Name="LeftSideDefault" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Default}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_Default}" Grid.Column="0" Visibility="Visible">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="2,0,0,2"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                </Border>
                                                                <Border x:Name="LeftSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}" Grid.Column="0">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="2,0,0,2"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
                                                                </Border>
                                                                <Border x:Name="LeftSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}" Grid.Column="0">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="2,0,0,2"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <Grid>
                                                                        <Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
                                                                        <Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
                                                                    </Grid>
                                                                </Border>
                                                                <Border x:Name="RightSideHover" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Hover}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverA}">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="0,2,2,0"/>
                                                                            <Setter Property="Grid.Column" Value="1"/>
                                                                            <Setter Property="Margin" Value="-1,0,0,0"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <Border BorderThickness="0" Background="{Binding GlobalButtonBackgroundBrush_Secondary_HoverB}"/>
                                                                </Border>
                                                                <Border x:Name="RightSidePress" BorderBrush="{Binding GlobalButtonBorderBrush_Secondary_Press}" Background="{Binding GlobalButtonBackgroundBrush_Secondary_PressA}">
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                            <Setter Property="BorderThickness" Value="1"/>
                                                                            <Setter Property="CornerRadius" Value="0,2,2,0"/>
                                                                            <Setter Property="Grid.Column" Value="1"/>
                                                                            <Setter Property="Margin" Value="-1,0,0,0"/>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <Grid>
                                                                        <Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressB}" StrokeThickness="0"/>
                                                                        <Rectangle Fill="{Binding GlobalButtonBackgroundBrush_Secondary_PressC}" StrokeThickness="0"/>
                                                                    </Grid>
                                                                </Border>
                                                                <Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_LeftButton" AutomationProperties.AutomationId="LeftButton" Background="Transparent" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.Click="{TemplateBinding Command}" Content="{TemplateBinding Content}" Grid.Column="0" Microsoft_Lync_Controls_Internal_Framework_Commands:Command.CommandParameter="{TemplateBinding CommandParameter}" IsTabStop="False" Margin="2" Padding="{TemplateBinding Padding}">
                                                                    <Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
                                                                        <Style TargetType="{x:Type Button}">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                        <Grid Background="Transparent">
                                                                                            <Border x:Name="presenterContainer" Margin="{TemplateBinding Padding}">
                                                                                                <ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                            </Border>
                                                                                        </Grid>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type Control}">
                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
                                                                </Microsoft_Lync_Controls_Internal:HelpTextButton>
                                                                <Microsoft_Lync_Controls_Internal:HelpTextButton x:Name="PART_RightButton" AutomationProperties.AutomationId="RightButton" Grid.Column="1" IsTabStop="False" Margin="-1,0,0,0" Width="13">
                                                                    <Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
                                                                        <Style TargetType="{x:Type Button}">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                        <Grid Background="Transparent">
                                                                                            <Border x:Name="presenterContainer">
                                                                                                <ContentPresenter x:Name="presenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                            </Border>
                                                                                        </Grid>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.BasedOn>
                                                                                <Style TargetType="{x:Type Control}">
                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                </Style>
                                                                            </Style.BasedOn>
                                                                        </Style>
                                                                    </Microsoft_Lync_Controls_Internal:HelpTextButton.Style>
                                                                    <Path x:Name="path" Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{Binding GlobalTextColor_MediumDark}" HorizontalAlignment="Stretch" Height="3" Margin="3,0,4,0" Stretch="Uniform" VerticalAlignment="Center" Width="5"/>
                                                                </Microsoft_Lync_Controls_Internal:HelpTextButton>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Microsoft_Lync_Controls_Internal:SplitButton.Style>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Top">
                                                <ContentPresenter.Content>
                                                    <Binding Path="DefaultEndpoint">
                                                        <Binding.Converter>
                                                            <Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ContentPresenter.Content>
                                            </ContentPresenter>
                                            <TextBlock Grid.Column="1" Foreground="{Binding GlobalTextColor_Dark}" FontWeight="SemiBold" Margin="4,0" Text="{Binding Resources.CallButtonLabel}" VerticalAlignment="Center"><TextBlock.Style>
													<Style TargetType="{x:Type TextBlock}">
														<Setter Property="FontSize" Value="10.6"/>
													</Style>
												</TextBlock.Style><Run Text="Call"/></TextBlock>
                                        </Grid>
                                    </Microsoft_Lync_Controls_Internal:SplitButton>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Microsoft_Lync_Controls:StartAudioCallButton.Style>
                <Binding Path="Model.DefaultEndpoint" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <Microsoft_Lync_Controls_Internal_Converters:EndpointTypeToControl/>
                    </Binding.Converter>
                </Binding>
            </Microsoft_Lync_Controls:StartAudioCallButton>
            <Rectangle Fill="#4C6F6F87" Grid.RowSpan="2" Grid.ColumnSpan="4" StrokeThickness="0"/>
        </Grid>
    </DataTemplate>

    <Microsoft_Lync_Controls_Internal_Converters:EnumToNotVisible x:Key="EnumToNotVisibleConverter" />

    <ControlTemplate x:Key="CustomizedContactSearchTemplate" TargetType="{x:Type Microsoft_Lync_Controls:ContactSearch}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Microsoft_Lync_Controls:ContactSearchInputBox x:Name="ContactSearchInputBox" Grid.Row="0" MaxResults="{Binding MaxResults, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                               SearchType="{Binding SearchType, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                               Background="{TemplateBinding Background}"/>

                <LyncCommunicationAddIn:CustomizedContactSearchResultList x:Name="ContactSearchResultList" Grid.Row="1" ItemsSource="{Binding Results, ElementName=ContactSearchInputBox}" ResultsState="{Binding SearchState, ElementName=ContactSearchInputBox}" SearchType="{Binding SearchType, ElementName=ContactSearchInputBox, Mode=TwoWay}" Visibility="{Binding SearchState, ConverterParameter=Cleared, Converter={StaticResource EnumToNotVisibleConverter}, ElementName=ContactSearchInputBox}" ContextualInformation="{TemplateBinding ContextualInformation}" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{TemplateBinding Background}" />
            </Grid>
        </Border>
    </ControlTemplate>
</ResourceDictionary>