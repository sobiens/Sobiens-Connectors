<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Sobiens.Connectors.Studio.UI.Controls.Style">
    <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="Control.FontFamily"  Value="Calibri"></Setter>
        <Setter Property="Control.FontSize"  Value="12"></Setter>
    </Style>

    <Style x:Key="GenericLabelStyle" BasedOn="{StaticResource ControlBaseStyle}" TargetType="Label">
    </Style>

    <Style x:Key="GenericButtonStyle" BasedOn="{StaticResource ControlBaseStyle}" TargetType="Button">
        <Setter Property="Control.VerticalAlignment"  Value="Center"></Setter>
        <Setter Property="Control.HorizontalAlignment"  Value="Center"></Setter>
        <Setter Property="Control.Background"  Value="#6264a7"></Setter>
        <Setter Property="Control.Foreground"  Value="White"></Setter>
        <!--<Setter Property="Control.FontFamily"  Value="Tahoma"></Setter>
        <Setter Property="Control.FontSize"  Value="12"></Setter>-->
        <Setter Property="Control.FontWeight"  Value="Bold"></Setter>
        <Setter Property="Control.Padding"  Value="5"></Setter>
        <Setter Property="Control.Height"  Value="35"></Setter>
        <Setter Property="Control.Width"  Value="100"></Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="320" ShadowDepth="3" BlurRadius="5" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="2" BorderThickness="1" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#464775"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DeleteButtonStyle" BasedOn="{StaticResource GenericButtonStyle}" TargetType="Button">
        <Setter Property="Control.Background"  Value="Red"></Setter>
        <Setter Property="Control.Foreground"  Value="White"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkRed"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CancelButtonStyle" BasedOn="{StaticResource GenericButtonStyle}" TargetType="Button">
        <Setter Property="Control.Background"  Value="White"></Setter>
        <Setter Property="Control.Foreground"  Value="Black"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EDEBE9"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabItemStyle" BasedOn="{StaticResource ControlBaseStyle}" TargetType="TabItem">
        <Setter Property="FontWeight"  Value="Bold"></Setter>
        <Setter Property="Foreground"  Value="White"></Setter>
        <Setter Property="Width"  Value="100"></Setter>
        <Setter Property="Margin"  Value="10,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Height="30">
                        <Grid>
                            <Grid>
                                <Border x:Name="Border" 
                                            CornerRadius="2,0,2,0"
                                            Background="#6264a7" >
                                </Border>
                            </Grid>
                            <ContentPresenter ContentSource="Header"
                                              Margin="10,10,0,0"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#464775" />
                            <Setter TargetName="Border" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#464775" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClosableHeaderGridStyle" TargetType="Grid">
        <Setter Property="Control.Background"  Value="#6264a7"></Setter>
        <Setter Property="Control.Foreground"  Value="White"></Setter>
        <Setter Property="Control.FontFamily"  Value="Tahoma"></Setter>
        <Setter Property="Control.FontSize"  Value="12"></Setter>
        <Setter Property="Control.FontWeight"  Value="Bold"></Setter>
        <Setter Property="Control.Margin"  Value="0"></Setter>
        <Setter Property="Control.Padding"  Value="0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#464775" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Control.Foreground"  Value="White"></Setter>
            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#464775" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="RibbonBarButtonStyle" TargetType="Button" >
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Control.BorderThickness"  Value="0"></Setter>
        <Setter Property="Control.Height"  Value="21"></Setter>
        <Setter Property="Control.VerticalAlignment"  Value="Top"></Setter>
        <Setter Property="Control.HorizontalAlignment"  Value="Left"></Setter>
        <Setter Property="Control.Background"  Value="Transparent"></Setter>
        <Setter Property="Control.Padding"  Value="0,0,10,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#464775" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FF5D5D7C" />
                <Setter Property="Foreground" Value="DeepPink"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--
        <Setter Property="Background" Value="#6264a7"/>
        <Setter Property="Foreground"  Value="White"></Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#464775" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="border" Property="Background" Value="#464775" />
            </Trigger>
        </Style.Triggers>
        -->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource ControlBaseStyle}"/>
    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ControlBaseStyle}"/>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlBaseStyle}"/>
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBaseStyle}"/>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBaseStyle}"/>
    -->
</ResourceDictionary>